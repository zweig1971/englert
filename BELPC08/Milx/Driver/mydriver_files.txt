The source code for this project was generated by Driver Wizard.
To compile this application, you will need a Delphi 2.0 compiler.

The Driver Wizard has created a library with which your application can
control your hardware.  It has also created a sample application which
diagnoses your hardware using this library.

  G:\Milx\Driver\mydriver_files.txt
         Describes the files generated.

  G:\Milx\Driver\mydriver_lib.pas
         A library for controling your hardware through WinDriver.
         Contains functions for accessing each of the resources defined in the Wizard.

  G:\Milx\Driver\mydriver_diag.pas
         The sample application which diagnoses your hardware using the mydriver_lib.pas library.

  G:\Milx\Driver\mydriver_project.dpr
         Borland Delphi Project File, suitable for versions 2.0, 3.0 and 4.0

  G:\Milx\Driver\mydriver_project.dof
         Borland Delphi Project Options File.

  G:\Milx\Driver\mydriver.inf
         A formatted reference file that contains information about installation files and devices
         such as filenames, version information, and so on. 

Compiling this project:
  Open Borland Delphi (version 2.0, 3.0 or 4.0), load mydriver_project.dpr and compile
  Important! You must compile it as a console application.
             To do that, use the 'Generate console application' checkbox on the Linker page of the Project|Options dialog of Delphi 2.0

Converting to a GUI application:
  This sample was written as a console mode application (rather than
  a GUI application) that uses standard input and standard output.
  This was done in order to simplify the source code. You may change it
  into a GUI application by removing all calls to Readln() and Writeln()
  functions, and calling MessageBox() instead.

